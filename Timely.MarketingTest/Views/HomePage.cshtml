@using Umbraco.Cms.Web.Common.PublishedModels;
@using Umbraco.Cms.Core.Models.Blocks;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage
@{
	Layout = null;
}
<h1>Home Page</h1>

@{
	var tags = Model.Value<IEnumerable<string>>("tags");
}

@if (tags != null && tags.Any())
{
	<div class="page-tags">
		<h3>Page Tags:</h3>
		<ul>
			@foreach (var tag in tags)
			{
				<li>@tag</li>
			}
		</ul>
	</div>
}
else
{
	<p>No tags.</p>
}

<div class="pokemon-section">
	<h3>Pokemon</h3>
	
	@* Umbraco Surface Controller Form *@
	@using (Html.BeginUmbracoForm("LoadPokemon", "PokemonSurface"))
	{
		<button type="submit" class="btn btn-primary">Load 5 Pokemon</button>
	}
	
	@* Display Pokemon Block List if it exists *@
	@{
		var pokemonBlockList = Model.Value<BlockListModel>("pokemonList");
	}
	
	@if (pokemonBlockList != null && pokemonBlockList.Any())
	{
		<div class="pokemon-grid">
			@foreach (var block in pokemonBlockList)
			{
				@Html.Partial("~/Views/Partials/blocklist/Components/pokemon.cshtml", block)
			}
		</div>
	}
	else
	{
		<p>No Pokemon loaded yet. Click the button above to load Pokemon from the API.</p>
	}
</div>

<!-- Content Count Form using Umbraco SurfaceController -->
<div class="content-count-section">
	<h3>Content Count</h3>
	
	@if (TempData["ContentCount"] != null)
	{
		<div class="alert alert-info">
			<strong>Total published content items: @TempData["ContentCount"]</strong>
		</div>
	}
	
	@using (Html.BeginUmbracoForm("GetContentCount", "PokemonSurface"))
	{
		<button type="submit" class="btn btn-secondary">Get Published Content Count</button>
	}
</div>

<style>
	.pokemon-grid {
		display: grid;
		grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
		gap: 20px;
		margin-top: 20px;
	}
	
	.pokemon-card {
		border: 1px solid #ccc;
		padding: 15px;
		border-radius: 8px;
		background-color: #f9f9f9;
		margin-bottom: 15px;
	}
	
	.pokemon-card h4 {
		margin-top: 0;
		text-transform: capitalize;
		color: #333;
	}
	
	.pokemon-section, .content-count-section {
		margin-top: 30px;
	}
	
	.btn {
		background-color: #4CAF50;
		color: white;
		padding: 10px 20px;
		border: none;
		border-radius: 4px;
		cursor: pointer;
		margin: 10px 0;
	}
	
	.btn-secondary {
		background-color: #6c757d;
	}
	
	.btn:hover {
		opacity: 0.8;
	}
	
	.alert {
		padding: 15px;
		margin: 10px 0;
		border-radius: 4px;
	}
	
	.alert-success {
		background-color: #d4edda;
		color: #155724;
		border: 1px solid #c3e6cb;
	}
	
	.alert-danger {
		background-color: #f8d7da;
		color: #721c24;
		border: 1px solid #f5c6cb;
	}
	
	.alert-info {
		background-color: #d1ecf1;
		color: #0c5460;
		border: 1px solid #bee5eb;
	}
</style>